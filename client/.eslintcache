[{"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\index.js":"1","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\App.js":"2","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\list\\List.js":"4","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\Dialog.js":"5","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\Stepper.js":"6","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\service\\Service.js":"7","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\register\\Register.js":"8","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\welfare\\Welfare.js":"9","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\ForwardBackHeader\\GlobalHeader.js":"10"},{"size":517,"mtime":1614574311848,"results":"11","hashOfConfig":"12"},{"size":215,"mtime":1614574311848,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1614574311848,"results":"14","hashOfConfig":"12"},{"size":2642,"mtime":1614835788415,"results":"15","hashOfConfig":"12"},{"size":860,"mtime":1614581743853,"results":"16","hashOfConfig":"12"},{"size":4292,"mtime":1614843381305,"results":"17","hashOfConfig":"12"},{"size":5457,"mtime":1614838177149,"results":"18","hashOfConfig":"12"},{"size":24950,"mtime":1614843653759,"results":"19","hashOfConfig":"12"},{"size":10899,"mtime":1614838058106,"results":"20","hashOfConfig":"12"},{"size":1800,"mtime":1614834507376,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1rvmiyb",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\index.js",[],["48","49"],"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\App.js",["50"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport List from './components/list/List.js'\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <List/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\list\\List.js",["51","52","53","54","55","56","57","58"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport MaterialTable from 'material-table'\r\nimport { Dialog } from '@material-ui/core';\r\nimport FormDialog from '../Dialog';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport HorizontalLinearStepper from '../Stepper';\r\nconst List = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n   \r\n    const [columns, setColumns] = React.useState([\r\n        { title: 'Name', field: 'name' },\r\n        { title: 'Sur Name', field: 'surname' },\r\n        { title: 'Birth Year', field: 'birthYear', type: 'numeric' },\r\n        { title: 'Birth City', field: 'birthCity', lookup: { 34: 'Karachi', 63: 'Lahore' } }\r\n    ]);\r\n    const [data, setData] = React.useState([\r\n        { name: 'Sabahat', surname: 'Sabir Khan', birthYear: 1999, birthCity: 34 },\r\n        { name: 'Hira', surname: 'Sufyan', birthYear: 1996, birthCity: 63 }\r\n    ])\r\n    return (\r\n        <div style={{ maxWidth: '90%', margin : 'auto' }}>\r\n            {/* <FormDialog open={open} onClose={handleClose}/> */}\r\n            {open==true?<HorizontalLinearStepper/>:(\r\n                \r\n            <MaterialTable\r\n                title = \"Dummy Data\"\r\n                columns = {columns}\r\n                data = {data}\r\n                actions={[\r\n                    {\r\n                        icon: AddIcon,\r\n                        tooltip: 'Add',\r\n                        isFreeAction: true,\r\n                        onClick: handleClickOpen,\r\n                    },\r\n                  //   {\r\n                  //     icon: EditIcon,\r\n                  //     tooltip: 'Add',\r\n                  //     isFreeAction: true,\r\n                  //     // onClick: handleClickOpen,\r\n                  // },\r\n                  \r\n                   \r\n                  ]}\r\n          \r\n                \r\n                  editable={{\r\n                    onBulkUpdate: changes =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          resolve();\r\n                        }, 1000);\r\n                      }),     \r\n                    onRowDelete: oldData =>\r\n                      new Promise((resolve, reject) => {\r\n                        setTimeout(() => {\r\n                          resolve();\r\n                        }, 1000);\r\n                      }),     \r\n                  }}\r\n            />  )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List\r\n","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\Dialog.js",[],"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\Stepper.js",["59"],"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\service\\Service.js",["60","61","62"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport GlobalHeader from '../ForwardBackHeader/GlobalHeader'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\nexport default function Register({next,back}) {\r\n  const classes = useStyles();\r\n  const [Header, setHeader] = useState({\r\n    TokenNo: \"\",\r\n    ServiceDate: new Date(),\r\n    MRNo: 'recID',\r\n    Ward: \"\",\r\n    Amount: \"\",\r\n    TotalAmount: \"\",\r\n    PatientContribution: \"\",\r\n    Remarks: \"\",\r\n    CreatedUser: \"Admin\",\r\n    ModifyUser: \"Admin\"\r\n});\r\n\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: '80%', justifyContent:'center' }}>\r\n       <GlobalHeader forward={next} back={back} title=\"Service\"/>\r\n      <Grid container>\r\n        <Grid sm={12}>\r\n          <Grid container spacing={4}>\r\n            <Grid item lg={7} sm={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <TextField value={Header.MRNo} id=\"MRNo\" fullWidth variant=\"outlined\"\r\n                    type=\"text\" disabled={true}\r\n                    label=\"M.R. #\"/>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth variant=\"outlined\"\r\n                    onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n                    label=\"Token No\"/>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <TextField id=\"ServiceDate\" label=\"Service Date\" type=\"date\" variant=\"outlined\"\r\n                    value={Header.ServiceDate} fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, ServiceDate: e.target.value })}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}/>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel  id=\"demo-simple-select-helper-label\">Gender</InputLabel>\r\n                    <Select \r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"Gender\"\r\n                      value={Header.Gender}\r\n                      onChange={(e) => setHeader({ ...Header, Gender: e.target.value })}\r\n                    >\r\n                      <MenuItem value=\"male\">Male</MenuItem>\r\n                      <MenuItem value=\"female\">Female</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel  id=\"demo-simple-select-helper-label\">Ward</InputLabel>\r\n                    <Select \r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"Ward\"\r\n                      value={Header.Ward}\r\n                      onChange={(e) => setHeader({ ...Header, Ward: e.target.value })}\r\n                    >\r\n                      <MenuItem value=\"Ward #1\">Ward #1</MenuItem>\r\n                      <MenuItem value=\" Ward #2\">Ward #2</MenuItem>\r\n                      <MenuItem value=\"Ward #3\">Ward #3</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <TextField value={Header.Amount} id=\"Amount\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, Amount: e.target.value })}\r\n                    label=\"Amount\"/>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <TextField value={Header.TotalAmount} id=\"TotalAmount\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, TotalAmount: e.target.value })}\r\n                    label=\"Total Amount\"/>\r\n                </Grid>\r\n                <Grid item md={4} sm={12} lg={3}>\r\n                  <TextField value={Header.PatientContribution} id=\"PatientContribution\" type=\"text\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, PatientContribution: e.target.value })}\r\n                    label=\"Patient Contribution\"/>\r\n                </Grid>\r\n                <Grid item md={8} sm={12} lg={6}>\r\n                  <TextField value={Header.Remarks} id=\"Remarks\" type=\"text\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, Remarks: e.target.value })}\r\n                    label=\"Remarks\"/>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item lg={1}/>\r\n            <Grid item lg={4} sm={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={6} sm={12} lg={6}>\r\n                  <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n                    // onChange={(e) => setHeader({ ...Header, MaleKids: e.target.value })}\r\n                    label=\"Token No\" disabled={true}/>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid> \r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\register\\Register.js",["63","64","65","66","67","68","69","70","71","72","73","74","75"],"C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\welfare\\Welfare.js",["76"],"import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  InputLabel,\r\n  Grid,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from '@material-ui/core';\r\nimport GlobalHeader from '../ForwardBackHeader/GlobalHeader';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Register({next,back}) {\r\n  const classes = useStyles();\r\n  const [Header, setHeader] = useState({\r\n    MRNo: 'recID',\r\n    TokenNo: \"\",\r\n    WelfareDate: new Date(),\r\n    Profession: \"\",\r\n    Fiqa: \"\",\r\n    Education: '',\r\n    Cast: \"\",\r\n    MonthlyIncome: 0,\r\n    Guardian: \"\",\r\n    OtherInfo: \"\",\r\n    MaleKids: \"\",\r\n    FemaleKids: \"\",\r\n    OtherKids: \"\",\r\n    Brothers: \"\",\r\n    Sisters: \"\",\r\n    NoOFFamilyMembers: \"\",\r\n    IsMarried: false,\r\n    IsAbleToPay: false,\r\n    IsEarning: false,\r\n    HaveGold: false,\r\n    ReqName: '',\r\n    ReqPhone: \"\",\r\n    ReqRelationWithPatient: '',\r\n    CreateUser: \"Admin\",\r\n    ModifyUser: \"Admin\",\r\n});\r\n\r\n  return (\r\n    <div style={{ padding: 16, margin: 'auto', maxWidth: '80%', justifyContent:'center' }}>\r\n      <GlobalHeader forward={next} back={back} title='Welfare'/>\r\n      <Grid container spacing={2}>\r\n        <Grid item md={4} sm={12} lg={3}>\r\n          <TextField value={Header.MRNo} id=\"MRNo\" fullWidth\r\n            type=\"text\" disabled={true}\r\n            label=\"M.R. #\"/>\r\n        </Grid>\r\n        <Grid item md={4} sm={12} lg={3}>\r\n          <TextField value={Header.TokenNo} id=\"TokenNo\" type=\"text\" fullWidth\r\n            onChange={(e) => setHeader({ ...Header, TokenNo: e.target.value })}\r\n            label=\"TokenNo\"/>\r\n        </Grid>\r\n        <Grid item md={4} sm={12} lg={3}>\r\n          <TextField id=\"WelfareDate\" label=\"Welfare Date\" type=\"date\"\r\n            value={Header.WelfareDate} fullWidth\r\n            onChange={(e) => setHeader({ ...Header, WelfareDate: e.target.value })}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}/>\r\n        </Grid>\r\n        <Grid item md={4} sm={12} lg={3}>\r\n          <FormControlLabel color=\"primary\"\r\n            control={<Checkbox checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n            onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />}\r\n            label=\"Zakaat\"\r\n          />\r\n          <FormControlLabel color=\"primary\"\r\n            control={<Checkbox checked={Header.IsRejected} name=\"Is Rejected\" fullWidth\r\n            onChange={e => setHeader({ ...Header, IsRejected: !Header.IsRejected })} />}\r\n            label=\"Donation\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid sm={12}>\r\n          <Grid container spacing={2}>\r\n            <Grid item md={4} sm={12} lg={3}>\r\n              <TextField value={Header.Profession} id=\"Profession\" type=\"text\" fullWidth\r\n                onChange={(e) => setHeader({ ...Header, Profession: e.target.value })}\r\n                label=\"Profession\"/>\r\n            </Grid>\r\n            <Grid item md={4} sm={12} lg={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel  id=\"demo-simple-select-helper-label\">Education</InputLabel>\r\n                <Select \r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"Education\"\r\n                  value={Header.Education}\r\n                  onChange={(e) => setHeader({ ...Header, Education: e.target.value })}\r\n                >\r\n                  <MenuItem value=\"matriculation\">Matriculation</MenuItem>\r\n                  <MenuItem value=\" intermediate\">Intermediate</MenuItem>\r\n                  <MenuItem value=\"bachelors\">Bachelors</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4} sm={12} lg={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel  id=\"demo-simple-select-helper-label\">Fiqa</InputLabel>\r\n                <Select \r\n                  labelId=\"demo-simple-select-helper-label\"\r\n                  id=\"Fiqa\"\r\n                  value={Header.Fiqa}\r\n                  onChange={(e) => setHeader({ ...Header, Fiqa: e.target.value })}\r\n                >\r\n                  <MenuItem value=\"shia\">Shia</MenuItem>\r\n                  <MenuItem value=\"sunni\">Sunni</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item md={4} sm={12} lg={3}>\r\n              <TextField value={Header.Cast} id=\"Cast\" type=\"text\" fullWidth\r\n                onChange={(e) => setHeader({ ...Header, Cast: e.target.value })}\r\n                label=\"Cast\"/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <br />\r\n      \r\n      <Grid container>\r\n        <Grid sm={12}>\r\n          <Grid container spacing={4}>\r\n            <Grid item lg={7} sm={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={6} sm={12} lg={6}>\r\n                  <TextField value={Header.ReqName} id=\"ReqName\" type=\"text\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, ReqName: e.target.value })}\r\n                    label=\"Requestor Name\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <FormControl fullWidth>\r\n                    <InputLabel  id=\"demo-simple-select-helper-label\">Relation With Patient</InputLabel>\r\n                    <Select \r\n                      labelId=\"demo-simple-select-helper-label\"\r\n                      id=\"ReqRelationWithPatient\"\r\n                      value={Header.ReqRelationWithPatient}\r\n                      onChange={(e) => setHeader({ ...Header, ReqRelationWithPatient: e.target.value })}\r\n                    >\r\n                      <MenuItem value=\"mother\">Mother</MenuItem>\r\n                      <MenuItem value=\"father\">Father</MenuItem>\r\n                      <MenuItem value=\"daughter\">Daughter</MenuItem>\r\n                      <MenuItem value=\"son\">Son</MenuItem>\r\n                      <MenuItem value=\"self\">Self</MenuItem>\r\n\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.ReqPhone} id=\"ReqPhone\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, ReqPhone: e.target.value })}\r\n                    label=\"Requestor Phone\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.Guardian} id=\"Guardian\" type=\"text\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, Guardian: e.target.value })}\r\n                    label=\"Guardian\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.MonthlyIncome} id=\"MonthlyIncome\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, MonthlyIncome: e.target.value })}\r\n                    label=\"Monthly Income\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.OtherInfo} id=\"OtherInfo\" type=\"text\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, OtherInfo: e.target.value })}\r\n                    label=\"Other Info\"/>\r\n                </Grid>\r\n                <Grid item sm={12} md={12} lg={12}>\r\n                <FormControlLabel color=\"primary\"\r\n                  control={<Checkbox checked={Header.IsMarried} name=\"Is Maried\" fullWidth\r\n                  onChange={e => setHeader({ ...Header, IsMarried: !Header.IsMarried })} />}\r\n                  label=\"Maried\"\r\n                />\r\n                <FormControlLabel color=\"primary\"\r\n                  control={<Checkbox checked={Header.HaveGold} name=\"HaveGold\" fullWidth\r\n                  onChange={e => setHeader({ ...Header, HaveGold: !Header.HaveGold })} />}\r\n                  label=\"Have Gold\"\r\n                />\r\n                <FormControlLabel color=\"primary\"\r\n                  control={<Checkbox checked={Header.IsEarning} name=\"IsEarning\" fullWidth\r\n                  onChange={e => setHeader({ ...Header, IsEarning: !Header.IsEarning })} />}\r\n                  label=\"Is Earning\"\r\n                />\r\n                <FormControlLabel color=\"primary\"\r\n                  control={<Checkbox checked={Header.IsAbleToPay} name=\"IsAbleToPay\" fullWidth\r\n                  onChange={e => setHeader({ ...Header, IsAbleToPay: !Header.IsAbleToPay })} />}\r\n                  label=\"Is Able To Pay\"\r\n                />\r\n              </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item lg={1}/>\r\n            <Grid item lg={4} sm={12}>\r\n              <Grid container spacing={2}>\r\n                <Grid item md={6} sm={12} lg={6}>\r\n                  <TextField value={Header.MaleKids} id=\"MaleKids\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, MaleKids: e.target.value })}\r\n                    label=\"No of Kids(male)\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.FemaleKids} id=\"FemaleKids\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, FemaleKids: e.target.value })}\r\n                    label=\"No of Kids(female)\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.OtherKids} id=\"OtherKids\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, OtherKids: e.target.value })}\r\n                    label=\"Other Kids\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.Brothers} id=\"Brothers\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, Brothers: e.target.value })}\r\n                    label=\"No of Brothers\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.Sisters} id=\"Sisters\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, Sisters: e.target.value })}\r\n                    label=\"No f Sisters\"/>\r\n                </Grid>\r\n                <Grid item md={6} sm={12}  lg={6}>\r\n                  <TextField value={Header.NoOFFamilyMembers} id=\"NoOFFamilyMembers\" type=\"number\" fullWidth\r\n                    onChange={(e) => setHeader({ ...Header, NoOFFamilyMembers: e.target.value })}\r\n                    label=\"Family Members\"/>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid> \r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","C:\\Users\\Student-PC\\Desktop\\HospitalManagementSystem\\client\\src\\components\\ForwardBackHeader\\GlobalHeader.js",["77"],"import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n}));\r\n\r\nexport default function GlobalHeader({forward, back, title}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n        <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n                <ArrowBackIosIcon onClick={back}/>\r\n            </IconButton>\r\n            <div style={{textAlign:'center', marginLeft:'45%'}}>\r\n            <Typography className={classes.title} variant=\"h6\">\r\n            { title }\r\n          </Typography>\r\n            </div>\r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-haspopup=\"true\"\r\n              color=\"inherit\"\r\n            >\r\n              <ArrowForwardIosIcon onClick={forward}/>\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":1,"column":8,"nodeType":"84","messageId":"85","endLine":1,"endColumn":12},{"ruleId":"82","severity":1,"message":"86","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":16},{"ruleId":"82","severity":1,"message":"87","line":4,"column":10,"nodeType":"84","messageId":"85","endLine":4,"endColumn":16},{"ruleId":"82","severity":1,"message":"88","line":5,"column":8,"nodeType":"84","messageId":"85","endLine":5,"endColumn":18},{"ruleId":"82","severity":1,"message":"89","line":7,"column":8,"nodeType":"84","messageId":"85","endLine":7,"endColumn":16},{"ruleId":"82","severity":1,"message":"90","line":16,"column":11,"nodeType":"84","messageId":"85","endLine":16,"endColumn":22},{"ruleId":"82","severity":1,"message":"91","line":20,"column":21,"nodeType":"84","messageId":"85","endLine":20,"endColumn":31},{"ruleId":"82","severity":1,"message":"92","line":26,"column":18,"nodeType":"84","messageId":"85","endLine":26,"endColumn":25},{"ruleId":"93","severity":1,"message":"94","line":33,"column":18,"nodeType":"95","messageId":"96","endLine":33,"endColumn":20},{"ruleId":"82","severity":1,"message":"97","line":75,"column":9,"nodeType":"84","messageId":"85","endLine":75,"endColumn":19},{"ruleId":"82","severity":1,"message":"98","line":10,"column":3,"nodeType":"84","messageId":"85","endLine":10,"endColumn":11},{"ruleId":"82","severity":1,"message":"99","line":11,"column":3,"nodeType":"84","messageId":"85","endLine":11,"endColumn":19},{"ruleId":"82","severity":1,"message":"100","line":25,"column":9,"nodeType":"84","messageId":"85","endLine":25,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":16},{"ruleId":"82","severity":1,"message":"98","line":4,"column":21,"nodeType":"84","messageId":"85","endLine":4,"endColumn":29},{"ruleId":"82","severity":1,"message":"101","line":8,"column":3,"nodeType":"84","messageId":"85","endLine":8,"endColumn":7},{"ruleId":"82","severity":1,"message":"102","line":10,"column":3,"nodeType":"84","messageId":"85","endLine":10,"endColumn":9},{"ruleId":"82","severity":1,"message":"103","line":15,"column":3,"nodeType":"84","messageId":"85","endLine":15,"endColumn":12},{"ruleId":"82","severity":1,"message":"104","line":30,"column":10,"nodeType":"84","messageId":"85","endLine":30,"endColumn":27},{"ruleId":"82","severity":1,"message":"105","line":110,"column":10,"nodeType":"84","messageId":"85","endLine":110,"endColumn":22},{"ruleId":"82","severity":1,"message":"106","line":112,"column":9,"nodeType":"84","messageId":"85","endLine":112,"endColumn":25},{"ruleId":"93","severity":1,"message":"107","line":116,"column":11,"nodeType":"95","messageId":"96","endLine":116,"endColumn":13},{"ruleId":"82","severity":1,"message":"108","line":127,"column":9,"nodeType":"84","messageId":"85","endLine":127,"endColumn":22},{"ruleId":"109","severity":1,"message":"110","line":181,"column":11,"nodeType":"111","endLine":181,"endColumn":29},{"ruleId":"109","severity":1,"message":"110","line":310,"column":21,"nodeType":"111","endLine":310,"endColumn":34},{"ruleId":"109","severity":1,"message":"110","line":311,"column":15,"nodeType":"111","endLine":311,"endColumn":38},{"ruleId":"82","severity":1,"message":"100","line":26,"column":9,"nodeType":"84","messageId":"85","endLine":26,"endColumn":16},{"ruleId":"82","severity":1,"message":"112","line":2,"column":10,"nodeType":"84","messageId":"85","endLine":2,"endColumn":14},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Dialog' is defined but never used.","'FormDialog' is defined but never used.","'EditIcon' is defined but never used.","'handleClose' is assigned a value but never used.","'setColumns' is assigned a value but never used.","'setData' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'handleSkip' is assigned a value but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'classes' is assigned a value but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'FormGroup' is defined but never used.","'TimePickerWrapper' is defined but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'handleSubmitt' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'fade' is defined but never used.","no-global-assign","no-unsafe-negation"]